#import ('./Route/MasterRoute') = MasterRoute;
#import ('./Utility') = Utility;

class Router {

	initialize : function () {
		this._routes = {};
	}

	addRoute : function (name, routes) {
		if (!name || !routes)
			throw 'You can\'t add empty route name or routes';
		if (routes instanceof MasterRoute) {
			this._routes[name] = this.build(name, routes);
		}
		else 
			this._routes[name] = routes;
	}

	getRoute : function (name) {
		if (!name)
			throw 'You can\'t get route empty name';
		return this._routes[name];
	}

	getRoutes : function () {
		return this._routes;
	}

	build : function (key, cur) {
		var routes = {};

		if (cur instanceof MasterRoute)
			routes = cur.getRoutes();
		else {
			routes = cur;
			cur = null;
		}
		if (!routes.type)
			throw 'Cannot determined type for your route';
		var req = Utility.require(Config.path + '/Kernel/Route/Type/'+ routes.type +'RouteType');
		return new req(key, routes, cur);
	}

}

#export Router;