#import (Config.path +'/Kernel/Utility') = Utility;

class MasterTemplate {

	_viewClassName = 'MasterView';
	_view_class = undefined;
	_view = undefined;

	_templateManager = undefined;

	#default get for _viewClassName;
	#default set, get for _templateManager;

	initialize : function () {
		this.setTemplateManager(serviceLocator.get('TemplateManager'));
		this.onListen();
	}

	onListen : function () {
		return serviceLocator.get('Dispatcher');
	}

	getTemplate : function (template_name) {
		return React['createElement'](this.getTemplateManager().get(template_name).getView(), null);
	} 

	getView : function () {
		if (this._view_class == undefined) {
			var self = this;
			this._view = window[this.getViewClassName()];
			var tmp = function (props, context) {
				window[self.getViewClassName()].call(this, props, context);
				self._view = this;
			}
			tmp.prototype = Object.create(window[this.getViewClassName()].prototype);
			tmp.prototype._template = this; 
			this._view_class = tmp;
		}

		return this._view_class;
	}

}

#export MasterTemplate;