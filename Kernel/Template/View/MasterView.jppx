var tmp = React['createClass']({
	"render" : function () {
		throw "It's an abstract view, you can't instancied an object if you don't have override render method"
	}
});

class MasterView extends tmp {

	reactInheritance = tmp;
	_templateManager = undefined;

	#default get, set for _templateManager;

	initialize : function (props, context) {
		this.setTemplateManager(serviceLocator.get('TemplateManager'));
		_super(props, context);
	}

	link : function (e) {
		if (e == undefined || e == null || e.target == undefined || e.target == null)
			throw "You can't call directly link";
		var url = e.target.getAttribute('data-url');
		if (url == null || url == undefined)
			throw "You cant redirect with an empty URL";
		var dispatcher = serviceLocator.get('Dispatcher');
		dispatcher.trigger('Navigation:Link:onClick', {url : url});
	}

	getTemplate : function (template_name) {
		return React['createElement'](this.getTemplateManager().get(template_name).getView(), null);
	} 

	render = function () {
		return React.createElement("div", {onClick: this.test.bind(this)}, this.state.n)
	}

}

#export MasterView;