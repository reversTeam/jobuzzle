#import ('fs') = fs;

class MasterManager {

	pathDir = 'Kernel';
	#default get, set for pathDir;

	initialize : function () {
		this._all = {};
		this._all.invokables = {};
		this._all.factory = {};
	}

	public add : function (key, value, type) {
		this._all[type][key] = value;
	}

	public get : function (key) {
		var obj = this.getFactory(key);
		if (!obj)
			obj = this.getInvokables();
		return obj;
	}

	public getInvokables : function (key) {
		if (this._all['invokables'][key])
			return this.getObject(this._all['invokables'][key], 'invokables');
		return false;
	}

	public getFactory : function (key) {
		if (this._all['factory'][key])
			return this.getObject(this._all['factory'][key], 'factory');
		return false;
	}

	getObject : function (pathFile, type) {
		var pathToFile = Config.path +'/'+ this.getPathDir() +'/'+ pathFile +'.js';
		var req = {},
			obj = {};

		if (!fs.existsSync(pathToFile))
			throw 'File doesn\'t exist "'+ pathToFile +'"';
		req = require(pathToFile);
		obj = new req();
		if (type == 'factory')
			return obj.create(this);
		else
			return obj;
	}

}

#export MasterManager;