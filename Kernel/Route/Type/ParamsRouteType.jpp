/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:13:11
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-08-08 14:33:59
**************************************************************/

#import ('./MasterRouteType') = MasterRouteType;

class ParamsRouteType extends MasterRouteType {

	_typePatternRoute : ":(\.*)";

	initialize : function (key, routes, parent) {
		_super(key, routes, parent);
	}

	parse : function (segment) {
		var reg = new RegExp('^'+ this._typePatternRoute +'$');
		var params_key = reg.exec(this._routeUrl);

		if (params_key) {
			var options = this.getOptions();
			reg = new RegExp('^('+ options[params_key[1]] +')$');
			var result = reg.exec(segment);
			if (result) {
				var ret = {};
				ret[params_key[1]] = segment;
				return ret;
			}
		}
		return false;
	}

	inject : function (segment, datas) {
		if (segment != this.getName())
			return false;
		var reg = new RegExp('^'+ this._typePatternRoute +'$');
		var params_key = reg.exec(this._routeUrl);

		if (!params_key)
			throw "You have bad configuration for you ParamsRoute";
		if (!datas || !datas[params_key[1]])
			throw "You can't build a params routes if you don't have good parameters";
		return datas[params_key[1]];
	}

}

#export ParamsRouteType;